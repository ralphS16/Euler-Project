# Project Euler : Problem 2 ->https://projecteuler.net/problem=2
"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""
import time
restime = []
for j in range(10):
	time1 = time.clock()
	fibolist = [1,2]
	while fibolist[-1] + fibolist[-2] < 4000000:
		fibolist.append(fibolist[-1] + fibolist[-2])

	fiboeven = [x for x in fibolist if x % 2 == 0]
	sumfiboeven = sum(fiboeven)
	time2 = time.clock()
	restime.append(time2-time1)
print sumfiboeven
print fibolist[-1]
print sum(restime)/float(len(restime))
